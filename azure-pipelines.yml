# Maven package Java project Web App to Linux on Azure
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

variables:
  azureSubscription: 'DemoSubscription'
  
  # Resource Provisioning
  baseAppName: 'kyburns-throw-away'
  webAppName: $[format('{0}-web', variables['baseAppName'])]
  resourceGroupName: $[format('{0}-rg', variables['baseAppName'])]
  location: 'eastus'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool:
      vmImage: $(vmImageName)
    
    steps:
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'

    - task: CopyFiles@2
      displayName: 'Copy build output to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/app.jar'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/app'

    - task: CopyFiles@2
      displayName: 'Copy infrastructure templates to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/src/main/az'
        Contents: '*.json'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/infra'

    - task: PublishPipelineArtifact@0
      displayName: 'Publish pipeline artifacts'
      inputs:
        targetPath: $(Build.ArtifactStagingDirectory)

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - job: DeployDevEnvironment
    displayName: Deploy to Dev
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: 'drop'
        targetPath: $(System.DefaultWorkingDirectory)

    - script: |
        cd $(System.DefaultWorkingDirectory)
        ls -aR

    - task: AzureResourceGroupDeployment@2
      inputs:
        azureSubscription: $(azureSubscription)
        action: "Create Or Update Resource Group"
        resourceGroupName: $(resourceGroupName)
        location: $(location)
        templateLocation: 'Linked artifact'
        csmFile: '$(System.DefaultWorkingDirectory)/infra/azuredeploy.json'
        csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/parameters.json'
        overrideParameters: '-baseName $(baseAppName)'

    - task: AzureWebApp@1
      displayName: 'Deploy Website'
      inputs:
        azureSubscription: $(azureSubscription)
        appType: webAppLinux
        appName: $(webAppName)
        package: '$(System.DefaultWorkingDirectory)/target/app/app.jar'